<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <!--
   portal 壮观的大门; 豪华的入口; 门户网站; 入口站点;
   前台
   该项目为消费者，开始调用服务方的接口
  消费者和服务提供者差不多，消费者服务项目也是一个 SpringBoot项目
  但是刚刚由于SpringBoot由于网络原因，无法直接Spring Initialize 创建成功，  所以就通过创建maven项目来创建spring boot项目
  所以这个时候需要自己手动的将相关的springboot内容添加一下
  和goods服务一样，
  首先继承父依赖，父依赖现在被包装起来了，继承自己的一个父依赖即可
   自己的父依赖会继承springboot的父依赖
   -->
    <!-- 统一继承的父项目 -->
    <parent>
        <groupId>com.bjpowernode.springcloud</groupId>
        <artifactId>34-springcloud-service-parent</artifactId>
        <version>1.0.0</version>
        <relativePath>../34-springcloud-service-parent/pom.xml</relativePath>
    </parent>


	<!--复制了portal服务，本服务为turbine服务更换服务名称-->
    <groupId>com.bjpowernode.springcloud</groupId>
    <artifactId>34-springcloud-service-turbine</artifactId>
    <version>1.0.0</version>




    <!--
        然后进行拷贝goods服务中pom.xml中的name、description、properties标签
    -->
    <name>34-springcloud-service-turbine</name>
    <description>34-springcloud-service-turbine project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>


    <!--以及拷贝goods服务pom.xml当中的web 起步依赖
    添加起步依赖，该依赖即web开发，因为消费者也是一个web项目，即web开发
   -->
    <dependencies>
        <!--添加turbine的依赖
        用于聚合一些使用了hystrix的微服务方便hystrix dashboard仪表盘对服务的监控
        加进来之后第三步需要配置文件application.properties所以此时去往turbine服务的application.properties配置文件
        -->
        <!--spring-cloud-starter-netflix-turbine-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-turbine</artifactId>
        </dependency>
    </dependencies>
    <!--如上述添加完成之后开始写程序
    将goods服务的pom.xml粘贴过来到resources当中
    -->

</project>